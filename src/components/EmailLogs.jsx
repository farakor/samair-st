import React, { useState, useEffect, useCallback } from 'react';
import Sidebar from './Sidebar';
import { useAuth } from '../context/AuthContext';
import { useFiles } from '../context/FilesContext';

export default function EmailLogs() {
  const [logs, setLogs] = useState([]);
  const [status, setStatus] = useState({});
  const [loading, setLoading] = useState(false);
  const [manualFetchLoading, setManualFetchLoading] = useState(false);
  const [diagnosticsLoading, setDiagnosticsLoading] = useState(false);
  const { canAccessUpload } = useAuth();
  const { refreshFlightData, refreshFilesList } = useFiles();

  const loadLogs = useCallback(async () => {
    setLoading(true);
    try {
      const response = await fetch('http://localhost:3001/api/email-logs');
      if (response.ok) {
        const data = await response.json();
        setLogs(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–æ–≥–æ–≤:', error);
    } finally {
      setLoading(false);
    }
  }, []);

  const loadStatus = useCallback(async () => {
    try {
      const response = await fetch('http://localhost:3001/api/email-status');
      if (response.ok) {
        const data = await response.json();
        setStatus(data);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç–∞—Ç—É—Å–∞:', error);
    }
  }, []);

  useEffect(() => {
    if (canAccessUpload()) {
      loadLogs();
      loadStatus();
    }
  }, [canAccessUpload, loadLogs, loadStatus]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
  if (!canAccessUpload()) {
    return (
      <div className="flex">
        <Sidebar />
        <div className="flex-1 lg:ml-64 p-4 sm:p-8 pt-20 lg:pt-8">
          <div className="bg-red-100 border border-red-300 text-red-700 px-4 py-3 rounded">
            <p className="font-medium">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</p>
            <p className="text-sm mt-1">
              –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ª–æ–≥–∞–º –ø–æ—á—Ç—ã.
              –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.
            </p>
          </div>
        </div>
      </div>
    );
  }



  const manualFetch = async () => {
    setManualFetchLoading(true);
    try {
      const response = await fetch('http://localhost:3001/api/fetch-emails-manual', {
        method: 'POST',
      });

      if (response.ok) {
        const result = await response.json();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É API)
        if (result.success) {
          const { totalFiles, totalEmails } = result.data;

          if (totalFiles > 0) {
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–π—Å–æ–≤ –∏ —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º...');
            try {
              await Promise.all([
                refreshFlightData(),
                refreshFilesList()
              ]);
              console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
              alert(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ ${totalFiles} —Ñ–∞–π–ª(–æ–≤) –∏–∑ ${totalEmails} –ø–∏—Å–µ–º.\nüîÑ –î–∞–Ω–Ω—ã–µ —Ä–µ–π—Å–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.`);
            } catch (refreshError) {
              console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', refreshError);
              alert(`‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ ${totalFiles} —Ñ–∞–π–ª(–æ–≤) –∏–∑ ${totalEmails} –ø–∏—Å–µ–º.\n‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤—è—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.`);
            }
          } else {
            alert(`üì¨ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ ${totalEmails} –ø–∏—Å–µ–º, –Ω–æ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.`);
          }

          // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–≥–∏ –∏ —Å—Ç–∞—Ç—É—Å
          await loadLogs();
          await loadStatus();
        } else {
          alert(`‚ùå –û—à–∏–±–∫–∞: ${result.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
        }
      } else {
        const error = await response.json();
        alert(`–û—à–∏–±–∫–∞: ${error.error}`);
      }
    } catch (error) {
      alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–∏—Å–µ–º: ${error.message}`);
    } finally {
      setManualFetchLoading(false);
    }
  };

  const runDiagnostics = async () => {
    setDiagnosticsLoading(true);
    try {
      const response = await fetch('http://localhost:3001/api/database-diagnostics');

      if (response.ok) {
        const result = await response.json();

        if (result.success) {
          const { data } = result;
          const message = `
üìä –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:

üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ: ${data.database.connected ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ' : '‚ùå –ù–µ—Ç'}
üìã –¢–∞–±–ª–∏—Ü—ã: ${data.database.allTablesExist ? '‚úÖ –°–æ–∑–¥–∞–Ω—ã' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}
  - –ù–∞–π–¥–µ–Ω–Ω—ã–µ: ${data.database.tables.join(', ')}

üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:
  - –§–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ: ${data.statistics.totalFiles}
  - –†–µ–π—Å–æ–≤ –≤ –±–∞–∑–µ: ${data.statistics.totalFlights}
  
üìÇ –ü–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º:
  - –§–∞–π–ª—ã: ${JSON.stringify(data.statistics.filesBySource)}
  - –†–µ–π—Å—ã: ${JSON.stringify(data.statistics.flightsBySource)}

üéØ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ñ–∞–π–ª—ã: ${data.samples.recentFiles.length}
üõ´ –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–π—Å—ã: ${data.samples.recentFlights.length}
          `;

          alert(message);
        } else {
          alert(`–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${result.error}`);
        }
      } else {
        const error = await response.json();
        alert(`–û—à–∏–±–∫–∞ API: ${error.error}`);
      }
    } catch (error) {
      alert(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: ${error.message}`);
    } finally {
      setDiagnosticsLoading(false);
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleString('ru-RU');
  };

  const getLogIcon = (type) => {
    switch (type) {
      case 'success':
        return (
          <svg className="w-5 h-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
          </svg>
        );
      case 'error':
        return (
          <svg className="w-5 h-5 text-red-500" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clipRule="evenodd" />
          </svg>
        );
      case 'info':
      default:
        return (
          <svg className="w-5 h-5 text-blue-500" fill="currentColor" viewBox="0 0 20 20">
            <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
          </svg>
        );
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <Sidebar />

      <div className="lg:ml-64 p-4 sm:p-6 pt-20 lg:pt-6">
        <div className="mb-6 sm:mb-8">
          <h2 className="text-lg sm:text-xl font-semibold text-gray-900">–õ–æ–≥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏—Å–µ–º</h2>
          <p className="text-sm text-gray-500 mt-1">
            –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è XLS —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–æ—á—Ç—ã
          </p>
        </div>

        {/* –°—Ç–∞—Ç—É—Å –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <div className="bg-white rounded-lg shadow p-6 mb-6">
          <div className="flex justify-between items-start">
            <div>
              <h3 className="text-lg font-medium text-gray-900 mb-4">–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–±–æ—Ä–∞</h3>

              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                <div className={`p-3 rounded-lg ${status.isEnabled ? 'bg-blue-50' : 'bg-red-50'}`}>
                  <p className={`text-sm font-medium ${status.isEnabled ? 'text-blue-600' : 'text-red-600'}`}>–°—Ç–∞—Ç—É—Å</p>
                  <p className={`text-lg font-semibold ${status.isEnabled ? 'text-blue-900' : 'text-red-900'}`}>
                    {status.isEnabled ? '–í–∫–ª—é—á–µ–Ω' : '–û—Ç–∫–ª—é—á–µ–Ω'}
                  </p>
                  {status.lastError && (
                    <p className="text-xs text-red-600 mt-1" title={status.lastError}>
                      –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞
                    </p>
                  )}
                </div>

                <div className="bg-green-50 p-3 rounded-lg">
                  <p className="text-sm text-green-600 font-medium">–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—É—Å–∫</p>
                  <p className="text-lg font-semibold text-green-900">
                    {status.lastRun ? formatDate(status.lastRun) : '–ù–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è'}
                  </p>
                </div>

                <div className="bg-purple-50 p-3 rounded-lg">
                  <p className="text-sm text-purple-600 font-medium">–í—Å–µ–≥–æ –ø–∏—Å–µ–º</p>
                  <p className="text-lg font-semibold text-purple-900">{status.totalEmails || 0}</p>
                </div>

                <div className="bg-orange-50 p-3 rounded-lg">
                  <p className="text-sm text-orange-600 font-medium">–§–∞–π–ª–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ</p>
                  <p className="text-lg font-semibold text-orange-900">{status.totalFiles || 0}</p>
                </div>
              </div>

              {status.nextRun && (
                <p className="text-sm text-gray-600 mt-4">
                  –°–ª–µ–¥—É—é—â–∏–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫: {formatDate(status.nextRun)}
                </p>
              )}
            </div>

            <div className="flex flex-col space-y-2">
              <button
                onClick={runDiagnostics}
                disabled={diagnosticsLoading}
                className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
              >
                {diagnosticsLoading ? (
                  <>
                    <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    –ü—Ä–æ–≤–µ—Ä—è–µ–º...
                  </>
                ) : (
                  <>
                    <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ë–î
                  </>
                )}
              </button>

              <button
                onClick={manualFetch}
                disabled={manualFetchLoading}
                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed flex items-center"
              >
                {manualFetchLoading ? (
                  <>
                    <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    –ü–æ–ª—É—á–∞–µ–º...
                  </>
                ) : (
                  <>
                    <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é
                  </>
                )}
              </button>
            </div>
          </div>
        </div>

        {/* –õ–æ–≥–∏ */}
        <div className="bg-white rounded-lg shadow">
          <div className="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
            <div>
              <h3 className="text-lg font-medium text-gray-900">–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π</h3>
              <p className="text-sm text-gray-500">–ü–æ—Å–ª–µ–¥–Ω–∏–µ {logs.length} –∑–∞–ø–∏—Å–µ–π</p>
            </div>
            <button
              onClick={loadLogs}
              disabled={loading}
              className="px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2"
            >
              {loading ? '–û–±–Ω–æ–≤–ª—è–µ–º...' : '–û–±–Ω–æ–≤–∏—Ç—å'}
            </button>
          </div>

          {loading ? (
            <div className="px-6 py-8 text-center">
              <svg className="animate-spin w-8 h-8 mx-auto text-gray-400 mb-4" fill="none" viewBox="0 0 24 24">
                <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
              <p className="text-gray-500">–ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥–∏...</p>
            </div>
          ) : logs.length === 0 ? (
            <div className="px-6 py-8 text-center">
              <svg className="w-12 h-12 mx-auto text-gray-400 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 7v8a2 2 0 002 2h6M8 7V5a2 2 0 012-2h4.586a1 1 0 01.707.293l4.414 4.414a1 1 0 01.293.707V15a2 2 0 01-2 2v0M8 7H6a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2v-2" />
              </svg>
              <p className="text-gray-500">–õ–æ–≥–∏ –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>
              <p className="text-sm text-gray-400 mt-1">
                –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å–µ–º –≤—Ä—É—á–Ω—É—é –∏–ª–∏ –¥–æ–∂–¥–∏—Ç–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
              </p>
            </div>
          ) : (
            <div className="divide-y divide-gray-200">
              {logs.map((log, index) => (
                <div key={index} className="px-6 py-4">
                  <div className="flex items-start space-x-3">
                    <div className="flex-shrink-0 mt-1">
                      {getLogIcon(log.type)}
                    </div>
                    <div className="flex-1 min-w-0">
                      <div className="flex items-center justify-between">
                        <p className="text-sm font-medium text-gray-900">
                          {log.message}
                        </p>
                        <p className="text-sm text-gray-500">
                          {formatDate(log.timestamp)}
                        </p>
                      </div>
                      {log.error && (
                        <p className="text-sm text-red-600 mt-1">
                          –û—à–∏–±–∫–∞: {log.error}
                        </p>
                      )}
                      {log.details && (
                        <div className="text-sm text-gray-600 mt-2">
                          {log.details.processedFiles && log.details.processedFiles.length > 0 && (
                            <div>
                              <p className="font-medium">–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:</p>
                              <ul className="list-disc list-inside ml-4 mt-1">
                                {log.details.processedFiles.map((file, fileIndex) => (
                                  <li key={fileIndex}>
                                    {file.filename} ({file.size} –±–∞–π—Ç) –æ—Ç {file.from}
                                  </li>
                                ))}
                              </ul>
                            </div>
                          )}
                          {log.details.errors && log.details.errors.length > 0 && (
                            <div className="mt-2">
                              <p className="font-medium text-red-600">–û—à–∏–±–∫–∏:</p>
                              <ul className="list-disc list-inside ml-4 mt-1">
                                {log.details.errors.map((error, errorIndex) => (
                                  <li key={errorIndex} className="text-red-600">
                                    {error.filename ? `${error.filename}: ${error.error}` : error.message || error.error}
                                  </li>
                                ))}
                              </ul>
                            </div>
                          )}
                        </div>
                      )}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-6 p-4 bg-blue-50 rounded-lg">
          <h4 className="text-sm font-medium text-blue-900 mb-2">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—á—Ç—É –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 —É—Ç—Ä–∞</li>
            <li>‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø–∏—Å—å–º–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π —Å XLS/XLSX –≤–ª–æ–∂–µ–Ω–∏—è–º–∏</li>
            <li>‚Ä¢ –õ–æ–≥–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 –∑–∞–ø–∏—Å–µ–π</li>
            <li>‚Ä¢ –î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é"</li>
          </ul>
        </div>
      </div>
    </div>
  );
} 